check flood_fill
◦ Except for the map content, each type of element can be separated by one or more empty line(s).


PLAN

main.c

1-check number of args
2-init_file_struct()
3-call PARSER()

  parser.c
	1-init_file_struct()
	2-valid_file_extension()
	3-get_content_from_file()


		handle_file.c

		get_content_from_file()
			1-open _file()
			2-make_map_arr()  returns lines in map /a file with lines seperates \n
			3-split lines //then i have a string array of lines
			4-count how many string you have.

			valid_file_content.c
			1-extract textures from map for each identifier NO, WE... also colors




CHECK:
: Something is missing (R, NO, SO, S…)
  : Twice the same thing (two R, two NO..)
  : Resolution with int larger than int max
  : Resolution with a comma or other character in it
  : Resolution with 3 digits, or just one, or a 0
  : F or C with a missing digit, or an extra digit
  : F or C with one comma less or one comma too many
  : F or C with an int greater than int max: must return an error
  : F or C with a number greater than 255
  : A wrong gender identifier (X instead of R, or E instead of EA)
All the tricky things to think about when analyzing the map:
  : An empty line in the map: “Except for the map itself, the information for each element can be separated by one or more spaces”
  : An incorrect character in the map, like a 4
  : An open map
  : “Spaces are a valid part of the map, it’s up to you to manage them correctly”: for me empty spaces are walls
  : The map is before another element
  : There is no map
  : No player or multiple players